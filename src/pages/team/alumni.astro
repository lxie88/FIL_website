---
import Layout from '~/layouts/PageLayout.astro';
import { headerData, footerData } from '~/navigation';

const metadata = {
  title: 'Alumni',
  description: 'Our former team members who have contributed to our research and moved on to new opportunities.',
};

// Empty array for now, can be populated later when there are alumni
const alumniMembers = [];
---

<Layout metadata={metadata}>
  <main>
    <section class="px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-7xl">
      <div class="max-w-3xl mx-auto text-center mb-16">
        <h1 class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-teal-400">
          Alumni
        </h1>
        <p class="text-xl text-gray-600 dark:text-slate-400">
          Our former team members who have contributed to our research and moved on to new opportunities.
        </p>
      </div>
      
      {alumniMembers.length > 0 ? (
        <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
          {alumniMembers.map((member) => (
            <div class="group bg-white dark:bg-slate-900 rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-2xl hover:-translate-y-2">
              <div class="relative">
                <div class="absolute -inset-1 bg-gradient-to-r from-blue-500 to-teal-400 rounded-full blur opacity-25 group-hover:opacity-75 transition duration-300"></div>
                <img
                  class="relative w-48 h-48 rounded-full object-cover mb-4 mx-auto border-4 border-white dark:border-slate-800 shadow-lg transition-transform duration-300 group-hover:scale-105"
                  src={member.image}
                  alt={member.name}
                  width={192}
                  height={192}
                />
              </div>
              <h3 class="text-xl font-bold text-center mb-1 group-hover:text-blue-500 transition-colors duration-300">{member.name}</h3>
              <p class="text-gray-600 dark:text-slate-400 text-center font-medium mb-3">{member.title}</p>
              <div class="relative">
                <p class="mt-2 text-center text-gray-600 dark:text-slate-400 max-h-20 overflow-hidden transition-all duration-300 group-hover:max-h-[500px]">
                  {member.bio}
                </p>
                <div class="absolute bottom-0 left-0 right-0 h-8 bg-gradient-to-t from-white dark:from-slate-900 to-transparent group-hover:opacity-0 transition-opacity duration-300"></div>
              </div>
              <div class="flex justify-center mt-6 space-x-4">
                <div class="relative group">
                  <button 
                    class="email-button text-blue-500 hover:text-blue-700 flex items-center transition-colors duration-300 hover:scale-110"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                    <span class="text-sm">Email</span>
                  </button>
                  <div class="email-popup hidden absolute z-10 mt-2 w-64 bg-white dark:bg-slate-800 rounded-lg shadow-lg p-4 border border-gray-200 dark:border-gray-700">
                    <div class="flex flex-col items-center">
                      <a href={`mailto:${member.email}`} class="text-sm font-mono bg-gray-100 dark:bg-gray-700 p-2 rounded w-full text-center hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-300">
                        {member.email}
                      </a>
                    </div>
                  </div>
                </div>
                {member.linkedin && (
                  <a 
                    href={member.linkedin} 
                    target="_blank" 
                    class="text-blue-500 hover:text-blue-700 flex items-center transition-colors duration-300 hover:scale-110"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                    </svg>
                    <span class="text-sm">LinkedIn</span>
                  </a>
                )}
                {member.scholar && (
                  <a 
                    href={member.scholar} 
                    target="_blank" 
                    class="text-blue-500 hover:text-blue-700 flex items-center transition-colors duration-300 hover:scale-110"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 3L1 9L12 15L21 10.09V17H23V9M5 13.18V17.18L12 21L19 17.18V13.18L12 17L5 13.18Z" />
                    </svg>
                    <span class="text-sm">Scholar</span>
                  </a>
                )}
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div class="max-w-3xl mx-auto text-center">
          <div class="bg-white dark:bg-slate-900 rounded-xl shadow-lg p-8 transition-all duration-300">
            <div class="relative">
              <div class="absolute -inset-1 bg-gradient-to-r from-blue-500 to-teal-400 rounded-full blur opacity-25 transition duration-300"></div>
              <div class="relative bg-white dark:bg-slate-900 rounded-xl p-8">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 mx-auto text-blue-500 mb-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                </svg>
                <h2 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">No Alumni Yet</h2>
                <p class="text-gray-600 dark:text-slate-400 mb-6">
                  The Fluid Innovation Lab is a relatively new research group, and we haven't had any alumni graduate from our team yet. Our current members are the pioneers of our lab, contributing to groundbreaking research in fluid dynamics and biomedical applications.
                </p>
                <p class="text-gray-600 dark:text-slate-400">
                  As our lab grows and members graduate, this page will showcase their achievements and contributions to our research. We look forward to celebrating their successes and maintaining connections with our future alumni network.
                </p>
              </div>
            </div>
          </div>
        </div>
      )}
    </section>
  </main>
</Layout>

<script>
  // Add event listener to handle email popup visibility
  document.addEventListener('DOMContentLoaded', function() {
    // Get all email buttons
    const emailButtons = document.querySelectorAll('.email-button');
    
    emailButtons.forEach(button => {
      const popup = button.nextElementSibling;
      
      // Show popup on button click
      button.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        // Hide all other popups first
        document.querySelectorAll('.email-popup').forEach(p => {
          if (p !== popup) p.classList.add('hidden');
        });
        
        // Toggle the current popup
        popup.classList.toggle('hidden');
      });
      
      // Hide popup when mouse leaves the popup area
      popup.addEventListener('mouseleave', function() {
        popup.classList.add('hidden');
      });
      
      // Also hide popup when clicking outside
      document.addEventListener('click', function(e) {
        if (!popup.contains(e.target) && !button.contains(e.target)) {
          popup.classList.add('hidden');
        }
      });
    });
  });
</script> 